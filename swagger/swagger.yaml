swagger: "2.0"
info:
  version: "1.0.0"
  title: "Beyond The Label"
host: "localhost"
basePath: "/btl"
schemes:
- "https"
- "http"
paths:
  /customer:
    post:
      tags:
      - "Customer"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Customer create request"
        required: true
        schema:
          type: object
          required:
          - "name"
          - "logo_file_path"
          properties:
            name:
              type: string
              format: string
            logo_file_path:
              type: string
              format: binary
            intent_file_path:
              type: string
              format: binary
      responses:
        "200":
          description: "Customer created successfully"
          schema:
            type: object
            properties:
              message:
                type: string
                format: string
              data:
                type: object
                properties:
                  customer_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    format: string
                  logo_file_path:
                    type: string
                  intent_file_path:
                    type: string
                  status:
                    type: boolean
                  training_status:
                    type: integer
                    format: int64
                  bucket_name:
                    type: string
                    format: string
                  is_deleted:
                    type: boolean
        "405":
          description: "Invalid input"
    put:
      tags:
      - "Customer"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Customer update request"
        required: true
        schema:
          type: object
          required:
          - "customer_id"
          properties:
            customer_id:
              type: string
              format: uuid
            logo_file_path:
              type: string
              format: binary
            intent_file_path:
              type: string
              format: binary
      responses:
        "200":
          description: "Customer updated successfully"
          schema:
            type: object
            properties:
              message:
                type: string
                format: string
              data:
                type: object
                properties:
                  customer_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    format: string
                  logo_file_path:
                    type: string
                  intent_file_path:
                    type: string
                  status:
                    type: boolean
                  training_status:
                    type: integer
                    format: int64
                  bucket_name:
                    type: string
                    format: string
                  is_deleted:
                    type: boolean
        "405":
          description: "Invalid input"
    get:
      tags:
      - "Customer"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid Request"
        "200":
          description: "Customer Details"
          schema:
            type: array
            items:
              type: object
              properties:
                customer_id:
                  type: string
                  format: uuid
                name:
                  type: string
                  format: string
                logo_file_path:
                  type: string
                intent_file_path:
                  type: string
                status:
                  type: boolean
                training_status:
                  type: integer
                  format: int64
                bucket_name:
                  type: string
                  format: string
                is_deleted:
                  type: boolean
  /customer/{id}:
    delete:
      tags:
      - "Customer"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Customer id to delete"
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: "Customer deleted successfully"
        "405":
          description: "Invalid input"
  /customer/status:
    put:
      tags:
      - "Customer"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Customer status update request"
        required: true
        schema:
          type: object
          properties:
            current_customer_id:
              type: string
              format: uuid
            new_customer_id:
              type: string
              format: uuid
      responses:
        "200":
          description: "Customer status changed successfully"
        "405":
          description: "Invalid input"
  /product:
    post:
      tags:
      - "Product"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product create request"
        required: true
        schema:
          type: object
          required:
          - "productName"
          - "productLabel"
          - "customerId"
          - "productDescription"
          - "productVideo"
          properties:
            customerId:
              type: string
              format: uuid
            productId:
              type: string
              format: uuid
            productName:
              type: string
            productLabel:
              type: string
            productDescription:
              type: string
            productVideoFile:
              type: string
              format: binary
            productIntentFile:
              type: string
              format: binary
            productMetadata:
                  type: array
                  items:
                    type: object
                    properties:
                      Key:
                        type: string
                        format: string
                      value:
                        type: string
                        format: string
      responses:
        "200":
          description: "Product created successfully"
          schema:
            type: object
            properties:
              customerId:
                type: string
                format: uuid
              productId:
                type: string
                format: uuid
              productName:
                type: string
              productLabel:
                type: string
              productDescription:
                type: string
              productVideoPath:
                type: string
              productIntentPath:
                type: string
              productImageStatus:
                type: boolean
              productTrainingStatus:
                type: integer
                format: int64
              productMetadata:
                    type: array
                    items:
                      type: object
                      properties:
                        Key:
                          type: string
                          format: string
                        value:
                          type: string
                          format: string
        "405":
          description: "Invalid input"
    put:
      tags:
      - "Product"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product create request"
        required: true
        schema:
          type: object
          required:
          - "productId"
          properties:
            customerId:
              type: string
              format: uuid
            productId:
              type: string
              format: uuid
            productName:
              type: string
            productLabel:
              type: string
            productDescription:
              type: string
            productVideoFile:
              type: string
            productIntentFile:
              type: string
            productImageStatus:
                type: boolean
            productTrainingStatus:
              type: integer
              format: int64
            productMetadata:
                  type: array
                  items:
                    type: object
                    properties:
                      Key:
                        type: string
                        format: string
                      value:
                        type: string
                        format: string
      responses:
        "200":
          description: "Product created successfully"
          schema:
            type: object
            properties:
              customerId:
                type: string
                format: uuid
              productId:
                type: string
                format: uuid
              productName:
                type: string
              productLabel:
                type: string
              productDescription:
                type: string
              productVideoPath:
                type: string
              productIntentPath:
                type: string
              productImageStatus:
                type: boolean
              productTrainingStatus:
                type: integer
                format: int64
              productMetadata:
                    type: array
                    items:
                      type: object
                      properties:
                        Key:
                          type: string
                          format: string
                        value:
                          type: string
                          format: string
        "405":
          description: "Invalid input"
    get:
      tags:
      - "Product"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Customer Details"
          schema:
            type: array
            items:
              type: object
              properties:
                customerId:
                  type: string
                  format: uuid
                productId:
                  type: string
                  format: uuid
                productName:
                  type: string
                productLabel:
                  type: string
                productDescription:
                  type: string
                productVideoPath:
                  type: string
                productIntentPath:
                  type: string
                productImageStatus:
                  type: boolean
                productTrainingStatus:
                  type: integer
                  format: int64
                productMetadata:
                      type: array
                      items:
                        type: object
                        properties:
                          Key:
                            type: string
                            format: string
                          value:
                            type: string
                            format: string
  /product/{id}:
    delete:
      tags:
      - "Product"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Product id to delete"
        required: true
        type: string
        format: uuid
      responses:
        "405":
          description: "Invalid input"
  /user/search:
    post:
      tags:
      - User
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Customer update request"
          required: true
          schema:
            type: object
            required:
            - "imageFile"
            properties:
              imageFile:
                type: string
                format: binary
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Invalid input"
          schema:
            type: array
            items:
              type: object
              properties:
                productName:
                  type: string
                productLabel:
                  type: string
                productDescription:
                  type: string
                productScore:
                  type: integer
                  format: int64
                productMetadata:
                      type: array
                      items:
                        type: object
                        properties:
                          Key:
                            type: string
                            format: string
                          value:
                            type: string
                            format: string
  /customer/{id}/intent:
    get:
      summary: Returns all intents for a specific customer
      description: This can be used to display all intents in a list which can then be cycled through to view particular intents. Filter intents by customer ID using CSV.
      tags:
      - Customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Customer id for intents"
        required: true
        type: string
      responses:
        "200":
          description: "All intents for this customer"
          schema:
            type: array
            items:
              $ref: '#/definitions/Intent'
        "405":
          description: "Invalid input"
    post:
      summary: Creates/Updates/Deletes intents mentioned in the CSV
      description: This will be used every time the CSV is updated. It'll create/update/delete intents mentioned in the CSV depending on the Action column
      tags:
      - Customer
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Customer id for intents"
        required: true
        type: string
      - name: "filePath"
        in: "body"
        schema:
          type: object
          required:
            - filePath
          properties:
            filePath:
              type: string
      responses:
        "200":
          description: "Successfully added intents for the customer"
          schema:
            type: array
            items:
              $ref: '#/definitions/Intent'
        "405":
          description: "Invalid input"
  /product/{id}/intent:
    get:
      summary: Returns all intents for a specific product
      description: This can be used to display all intents in a list which can then be cycled through to view particular intents. Filter intents by product ID using CSV.
      tags:
      - Product
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Product id for intents"
        required: true
        type: string
      responses:
        "200":
          description: "All intents for this product"
          schema:
            type: array
            items:
              $ref: '#/definitions/Intent'
        "405":
          description: "Invalid input"
    post:
      summary: Creates/Updates/Deletes intents mentioned in the CSV
      description: This will be used every time the CSV is updated. It'll create/update/delete intents mentioned in the CSV depending on the Action column
      tags:
      - Product
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Product id for intents"
        required: true
        type: string
      - name: "filePath"
        in: "body"
        schema:
          type: object
          required:
            - filePath
          properties:
            filePath:
              type: string
      responses:
        "200":
          description: "Successfully added intents for the product"
          schema:
            type: array
            items:
              $ref: '#/definitions/Intent'
        "405":
          description: "Invalid input"
definitions:
  ApiResponse:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        message:
          type: "string"
  Part:
    type: "object"
    properties:
      text:
        type: "string"
      parameterId:
        type: "string"
  TrainingPhrase:
    type: "object"
    properties:
      id:
        type: "string"
      parts:
        type: "array"
        items:
          $ref: '#/definitions/Part'
      repeatCount:
        type: "integer"
  Parameter:
    type: "object"
    properties:
      id:
        type: "string"
      entityType:
        type: "string"
      isList:
        type: "boolean"
      redact:
        type: "boolean"
  Intent:
    type: "object"
    properties:
      name:
        type: "string"
      displayName:
        type: "string"
      trainingPhrases:
        type: array
        items:
          $ref: '#/definitions/TrainingPhrase'
      parameters:
        type: array
        items:
          $ref: '#/definitions/Parameter'
      priority:
        type: "integer"
      isFallback:
        type: "boolean"
      labels:
        type: "object"
        additionalProperties:
          type: "string"
      description:
        type: "string"